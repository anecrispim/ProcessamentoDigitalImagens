# -*- coding: utf-8 -*-
"""11)EqualizaçãoDeHistograma.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qXdf8I2fsA7lgO66NkQkcrdrDB3-LB7r

Atividade: Gerar a equalização por histograma das imagens:

a) Fig0316(1)(top_left).tif

b) Fig0316(2)(2nd_from_top).tif

c) Fig0316(3)(third_from_top).tif

d) Fig0316(4)(bottom_left)
"""

import numpy as np
from PIL import Image
import matplotlib.pyplot as plt

def equalizar_histograma(imagem_array):

    histograma, _ = np.histogram(imagem_array.flatten(), bins=256, range=(0, 255))

    cdf = np.cumsum(histograma)
    cdf_normalizado = cdf / cdf[-1]

    imagem_equalizada = np.interp(imagem_array.flatten(), range(256), cdf_normalizado * 255)
    return imagem_equalizada.reshape(imagem_array.shape).astype(np.uint8)

def gerar_histograma(imagem_array):
    histograma, _ = np.histogram(imagem_array, bins=256, range=(0, 255))
    return histograma

def salvar_grafico(histograma, titulo, nome_arquivo):
    plt.figure(figsize=(10, 6))
    plt.bar(range(256), histograma, color='gray', alpha=0.7)
    plt.title(titulo)
    plt.xlabel("Intensidade")
    plt.ylabel("Frequência")
    plt.savefig(nome_arquivo)
    plt.close()

def processar_imagem(caminho_imagem, nome_saida):
    imagem = Image.open(caminho_imagem).convert("L")
    imagem_array = np.array(imagem)

    histograma_original = gerar_histograma(imagem_array)
    salvar_grafico(histograma_original, "Histograma Original", f"{nome_saida}_original.png")

    imagem_equalizada = equalizar_histograma(imagem_array)

    histograma_equalizado = gerar_histograma(imagem_equalizada)
    salvar_grafico(histograma_equalizado, "Histograma Equalizado", f"{nome_saida}_equalizado.png")

    Image.fromarray(imagem_equalizada).save(f"{nome_saida}_equalizado.tif")

imagens = [
    "Fig0316(1)(top_left).tif",
    "Fig0316(2)(2nd_from_top).tif",
    "Fig0316(3)(third_from_top).tif",
    "Fig0316(4)(bottom_left).tif"
]

for i, imagem in enumerate(imagens, 1):
    processar_imagem(imagem, f"resultado_imagem_{i}")